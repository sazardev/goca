# GOCA Configuration File - Minimal Working Version  
# Archivo de configuración para proyectos generados con GOCA CLI

# Configuración del proyecto (requerida)
project:
  name: "goca"
  module: "github.com/usuario/goca"
  version: "1.0.0"
  description: "Proyecto generado con GOCA CLI"
  author: ""
  license: "MIT"
  tags: ["api", "clean-architecture"]

# Configuración de arquitectura (requerida)
architecture:
  pattern: "clean_architecture"
  layers:
    domain:
      enabled: true
      directory: "internal/domain"
      pattern: ""
      testing: true
    usecase:
      enabled: true 
      directory: "internal/usecase"
      pattern: ""
      testing: true
    repository:
      enabled: true
      directory: "internal/repository"
      pattern: ""
      testing: true
    handler:
      enabled: true
      directory: "internal/handler"
      pattern: ""
      testing: true
  patterns: ["repository", "factory"]
  di:
    type: "manual"
    auto_wire: true
    container_path: "internal/di"
    interfaces: true
  naming:
    entities: "PascalCase"
    fields: "PascalCase"
    files: "snake_case"
    packages: "lowercase"
    constants: "UPPER_CASE"
    variables: "camelCase"
    functions: "PascalCase"

# Configuración de base de datos (requerida)
database:
  type: "postgres"
  host: "localhost"
  port: 5432
  name: "goca_db"
  migrations:
    enabled: true
    auto_generate: true
    directory: "migrations"
    naming: "timestamp"
    versioning: "sequential"
    tools: ["migrate"]
  connection:
    max_open: 25
    max_idle: 5
    max_lifetime: "5m"
    ssl_mode: "disable"
    timezone: "UTC"
    charset: ""
    collation: ""
  features:
    soft_delete: true
    timestamps: true
    uuid: false
    audit: false
    versioning: false
    partitioning: false
    indexes: []
    constraints: []
  extensions: []
  custom_types: {}

# Configuración de generación de código (requerida)
generation:
  validation:
    enabled: true
    tags: ["required", "min", "max", "email"]
    custom_rules: true
    error_handling: "detailed"
    localization: "spanish"
    strict_mode: false
  business_rules:
    enabled: false
    directory: "internal/domain/rules"
    naming: "rule"
    testing: true
    documentation: true
  docker:
    enabled: true
    compose: true
    dockerfile: true
    multi_stage: true
    base_image: "alpine"
  docs:
    swagger:
      enabled: true
      title: "Goca API"
      version: "1.0.0"
      description: "API generada con GOCA CLI"
      host: "localhost:8080"
      base_path: "/api/v1"
      schemes: ["http"]
      tags: []
      extensions: {}
    postman:
      enabled: false
      output: "docs/postman"
      environment: true
      tests: true
      variables: true
    markdown:
      enabled: true
      output: "docs"
      template: "default"
      toc: true
      examples: true
  comments:
    enabled: true
    language: "spanish"
    style: "godoc"
    examples: true
    todo: true
    deprecated: true

# Configuración de testing (requerida)
testing:
  enabled: true
  coverage_threshold: 80.0
  benchmark: true
  integration: true
  e2e: false
  mocks: true
  fixtures: true
  parallel: true
  timeout: "5m"

# Configuración de features (requerida)
features:
  handlers: ["http"]
  middleware: []
  authentication: false
  authorization: false
  validation: true
  soft_delete: true
  timestamps: true
  business_rules: false
  caching: false
  rate_limiting: false
  cors: true
  compression: false
  metrics: false
  tracing: false
  logging: true

# Configuración de templates
templates:
  enabled: true
  directory: ".goca/templates"
  custom_templates: {}
  
# Configuración de calidad
quality:
  style:
    gofmt: true
    goimports: true
    golint: true
    govet: true
    staticcheck: false
    custom: []
    line_length: 120
    tab_width: 4
  security:
    enabled: true
    scanner: "gosec"
    rules: ["all"]
    exclude: []

# Configuración de infraestructura  
infrastructure:
  logging:
    enabled: true
    level: "info"
    format: "structured"
    output: ["stdout"]
    structured: true
    tracing: false
  monitoring:
    enabled: false
    metrics: false
    tracing: false
    health_check: true
    profiling: false
    tools: []
  cache:
    enabled: false
    type: "redis"
    ttl: "1h"
    max_size: "100MB"
  message_queue:
    enabled: false
    type: "rabbitmq"
    exchanges: []
    queues: []
  deployment:
    type: "docker"
    registry: ""
    namespace: ""
    replicas: 1
    resources:
      cpu: "100m"
      memory: "128Mi"

# Configuración por defecto para comandos CLI
defaults:
  database: "postgres"
  handlers: ["http"]
  validation: true
  soft_delete: true
  timestamps: true
  business_rules: false
  docker: true
  docs: true
  testing: true