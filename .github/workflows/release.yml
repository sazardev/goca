name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.1)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Download dependencies
      run: go mod download
    
    - name: Tidy dependencies  
      run: go mod tidy
    
    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
    
    - name: Build for multiple platforms
      run: |
        # Build for Windows 64-bit
        GOOS=windows GOARCH=amd64 go build -ldflags "-X github.com/sazardev/goca/cmd.Version=${{ steps.version.outputs.version }} -X github.com/sazardev/goca/cmd.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o goca-windows-amd64.exe
        
        # Build for Linux 64-bit
        GOOS=linux GOARCH=amd64 go build -ldflags "-X github.com/sazardev/goca/cmd.Version=${{ steps.version.outputs.version }} -X github.com/sazardev/goca/cmd.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o goca-linux-amd64
        
        # Build for macOS Intel
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X github.com/sazardev/goca/cmd.Version=${{ steps.version.outputs.version }} -X github.com/sazardev/goca/cmd.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o goca-darwin-amd64
        
        # Build for macOS Apple Silicon
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X github.com/sazardev/goca/cmd.Version=${{ steps.version.outputs.version }} -X github.com/sazardev/goca/cmd.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o goca-darwin-arm64
        
        # Create checksums
        sha256sum goca-* > checksums.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: "Goca ${{ steps.version.outputs.version }}"
        files: |
          goca-windows-amd64.exe
          goca-linux-amd64
          goca-darwin-amd64
          goca-darwin-arm64
          checksums.txt
        body: |
          ## üéâ Goca ${{ steps.version.outputs.version }}
          
          **Go Clean Architecture Code Generator**
          
          ### üöÄ Quick Installation
          
          **Using Go install:**
          ```bash
          go install github.com/sazardev/goca@${{ steps.version.outputs.version }}
          ```
          
          **Download Binary:**
          
          **Windows (64-bit):**
          - Download `goca-windows-amd64.exe`
          - Rename to `goca.exe` and add to your PATH
          
          **Linux (64-bit):**
          ```bash
          wget https://github.com/sazardev/goca/releases/download/${{ steps.version.outputs.version }}/goca-linux-amd64
          chmod +x goca-linux-amd64
          sudo mv goca-linux-amd64 /usr/local/bin/goca
          ```
          
          **macOS:**
          ```bash
          # Intel Macs
          wget https://github.com/sazardev/goca/releases/download/${{ steps.version.outputs.version }}/goca-darwin-amd64
          chmod +x goca-darwin-amd64
          sudo mv goca-darwin-amd64 /usr/local/bin/goca
          
          # Apple Silicon Macs
          wget https://github.com/sazardev/goca/releases/download/${{ steps.version.outputs.version }}/goca-darwin-arm64
          chmod +x goca-darwin-arm64
          sudo mv goca-darwin-arm64 /usr/local/bin/goca
          ```
          
          ### üõ†Ô∏è Quick Start
          ```bash
          # Initialize a new project
          goca init myproject --module github.com/user/myproject
          
          # Generate a complete feature
          goca feature User --fields "name:string,email:string,age:int"
          
          # Check version
          goca version
          ```
          
          ### üìã What's Included
          - ‚úÖ Project initialization with Clean Architecture
          - ‚úÖ Entity, UseCase, Repository, Handler generation
          - ‚úÖ Multi-protocol support (HTTP, gRPC, CLI, Worker, SOAP)
          - ‚úÖ Multi-database support (PostgreSQL, MySQL, MongoDB)
          - ‚úÖ Complete feature generation
          - ‚úÖ Dependency injection setup
          
          ### üîó Links
          - [Documentation](https://github.com/sazardev/goca/blob/main/README.md)
          - [Complete Guide](https://github.com/sazardev/goca/blob/main/GUIDE.md)
          - [Architecture Rules](https://github.com/sazardev/goca/blob/main/rules.md)
          
          **Verify your download:**
          Check the `checksums.txt` file to verify the integrity of your download.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
